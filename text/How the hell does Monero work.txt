 Welcome everybody, this is how the hell does Monero work with PowerCycle. PowerCycle is a DDoS network security principle engineer and Bitcoin user since 2011. He was introduced to the privacy cryptocurrency Monero in 2016 and currently runs the Monero Los Angeles Meetup. He's in mining, programmed a VPN to use Monero payment, organized the ShellCon 2017 Cryptocurrency Village, was the CFP review judge for the 2018 DEFCON Monero Village and helped organize the DEF CON Monero party. Please welcome PowerCycle to ShellCon 2018. Thank you. Hi everybody. I'm PowerCycle. Thanks for coming. So real quick about me. As Jared said, my day job is a network security engineer. So I've worked at a couple of the big DDoS companies. So a lot of what I do is analyze network traffic and things like that. And if you want to get a hold of me, you can find me on Gmail or Twitter or LinkedIn, Reddit, and Freenode, et cetera, as PowerCycle. So Monero is a privacy-focused focused cryptocurrency so the the way that it tries to achieve that privacy is really the three main pillars and for kind of the fourth pillar but three main ways the one is the ring signatures the ring CT which is ring confidential transactions and stealth addresses. So the fourth is Covery, which is a project within Monero, which will kind of give you some extra privacy. So I'll talk about that in a minute. So ring signatures anonymize the sender of any transaction. And this is one of the key things that makes Monero very different than Bitcoin. In Bitcoin, you have the owner of a wallet just sign directly to someone's, basically their public key. Their public key equals their address. And anyone at any time can see the public key. What Monero does is take a ring of signatures, sort of like a key ring. Imagine having six or seven or 20 keys on a key ring. So when a transaction is certified, the key ring itself creates the signature. In that, when that image of the key ring is used, you can't verifiably ID which of the keys on the ring were used to verify the transaction. In this way, even the recipient of the transaction can't know, because they know the inputs, but they can't even know which of the transactions or which of the signings was to them. So even though they are encrypted, Monero takes an additional step to obfuscate the gate the transaction by adding multiple transactions via the ring signatures. Ring signatures were actually much older. They were around in 1991. by employees who needed access to a general location, but without specifically identifying who that person was. So this is not necessarily the guy who's going into the sit down at the missile key system. This is who's going to the lunch cafeteria. Is someone authorized to be on base? Are they in the group that can go to the cafeteria or not? And they don't really care is the individual valid or not, just are they in the group? And in this way, that was the original introduction of ring signatures is you had a big group and they were all authorized. So what Monero does is use that kind of in reverse by making the entire group fake except for one. But by obfuscating it all, it makes it much more harder to trace back who the originator was. So this is kind of a graphical representation of some transactions. Some Bitcoin transactions would be on the top, and actually one Monero transaction would be on the bottom. So at the top, the original transaction would be in a block with many other transactions, and you might skip ahead to the next block where the previous transaction was the input for the next, that's the previous transaction was the input for the next. That's the next input for the next transaction. And at any time, if we receive the transaction for the Bitcoin in transaction five, we can tell exactly who transaction one was, at least wallet-wise. wallet-wise. With Monero, what you're doing is you're taking not only your valid transaction, but you're taking in that key ring, you're taking UTXOs from previous transactions or transactions that were later than your TXO transaction, and you're committing that one transaction ahead. So you're, in essence, doing multiple transactions when you do one transaction. This is the ring in actual, a visual way to think of the ring signatures, how it works. So because of this, this is also what makes the Monero blockchain bigger and more, quote, bloated than other blockchains, is is by default you're adding extra data into every transaction itself so last year last January the the Monero protocol was updated to, I think it's version 4 of its protocol. I think it was released in 2014. So previously, even though the center receiver were hidden, the transaction amount was still visible on the blockchain. Obscuring that wasn't part of the original protocol. And if you were doing some blockchain analysis you might be able to reasonably suspect well if this if this transaction is rather large then I can probably cut out a rather big subsets of wallets that have never received or transactions that have never been at least this amount so the what they started to do was the amount. What they started to do was confidential transactions, which obscured the amount of data that is in any single transaction. In essence, the miner who confirms the block gets to include and pick and choose which transactions are going in his block. When he includes a transaction in a block, he confirms that the transaction is valid. Previously, the inputs and the outputs were totally visible and it was easy to validate what was going on. And RingCT, which is not to be confused with ring signatures, it's very similar, but it is a different implementation. So ring CT is how the miner can still validate that the amount of inputs is equal to the amount of outputs. The miner organizing the block can't see how much any transaction was worth. But he can validate via some math I'll show in a second, but he can validate that the inputs were equal to the outputs. So this ring signature, this ring confidential transaction is kind of doing that. So I'll put some math up here, and I'll probably get even more confused as I try to explain it. But this is the best way I could even go over it. So I'll just dive right into it. Since the commitments are additive, which means since the inputs, since the inputs are additive and we don't know what that symbol is, I don't even know what that symbol is, but we could easily prove that the inputs equal the outputs by observing, by making the sum of the commitments to input and output equal to 0. So you have the sum of the commitments of j in, so the sum of all the inputs, minus the sum of all the commitments of t out, which is all the outputs, equal to zero. And then, to avoid sender identifiability, Shen Noether, who's one of the Monero Research Labs researcher PhDs, so Shen Noether proposed that the commitment sum as a certain non-zero value, so that you take the sum of the commitments of input and the sum of the commitments of output, and you equal that to a number that's on a graph. So below that sum of the commitments of the inputs of G is that sort of number. It's a number on a graph. And it sort of becomes a secret that's passed along in the transaction to validate that the transaction is not adding or subtracting numbers. So it would be an attack vector if someone could propose a transaction, like let's say they do two different transactions but one transaction has a negative number in it. You could make another invalid transaction where it has a really high positive number in it and the sum may turn out to be zero but the settling of accounts would not be correct so what this does is it eliminates the possibility that anything could be zero so that it could not be negative or that it could not be anything other than what is the input number. So that was the second part. So the third part is called stealth addresses. So this is how when a sender sends to a wallet and this data of who it's to is committed on the blockchain, this is how it obscures who the receiver is. So that you can't just do blockchain analysis and see everything that's going to a wallet. You can't see whether it's active. You can't see how much is going to it. You can't see who is sending to it. see how much is going to it you can't see how much who is sending to it because automatically every time the sender when when you tell me your wallet address i as the sender use your wallet address and an algorithm to come up with a one-time address so you don't have to tell me to me tell it to me it's just automatically generated generated for. And then as I commit this transaction to the blockchain, on your receiver side, on your wallet side, you're checking every transaction with your private key to see if the payment is actually meant for you. meant for you. So the sender uses his receiver key to cryptographically address the transaction. So only the receiver can decode it. It shouldn't say read it. Everybody can read it. Only the receiver can decode it. So I also copied this part out because this is the the hard part of the math which which is actually the the interesting part of it. But to step through this real quick. So Alice generates a random number and calculates the one-time public key. So that key, the O, is what's written on the blockchain so key output equals the hash of the random number of the key of Bob so the the view key of Bob times G which is that that secret on the curve plus the key of Bob again Alice sets K is the address of the payment adds the value of random number on the curve, and the transaction data of how much it is, and commits that to the network. It gets mined in a block. So Bob receives it, and he sees the value of the random number on the curve. He sees some random number, and he sees a key of O. That stealth address is that key. So then he says, well, if I plug my key, the key of Bob, times the random number and get the random number of the view key of Bob, and I can then calculate the the sender key of Bob equals the key minus the hash minus the random key times the number then Bob sees that the transaction that the stealth address is actually his address so he's got to jump through these hoops for every single transaction in order to come up with that output and see is this transaction to me or not and if it is Then he can decode the actual transaction Because he sees it's to his address He can use his key to then decode it and see how much Monero was actually sent to him. He now has the That Monero in his wallet and he can sign it off to someone else in the next transaction so It's this particular formula right here that makes Monero sinking take so long essentially. First off you've got to download the blockchain via peer-to-peer which can take a while. But then even if after you have it you have to check every single transaction with this math formula. Whereas with Bitcoin, you just scan it like you were gripping through a text file and you're done with. But here's the actual math you have to do. So the fourth part that I mentioned is Covery, which is an ITP router implementation built for Monero and by the Monero community. It's actually a little separate, but it's built for Monero initially. The reason being, anytime you do any sort of cryptocurrency transaction, you have to connect to that cryptocurrency's network. That means connecting to a particular port, connecting to a particular peer, and that data itself is just called metadata, so that we all know after Snowden. So it's hypothesized, and it's very real, that any carrier or any country or someone could simply start blocking ports, blocking IPs, and making transactions hard to do. Or identifying transactions and watching them and correlating transactions as they happen. I2P is a network layer that sits on top of TCP. So it's a lot like Tor, but it doesn't have any exit nodes. So you don't ever come out of I2P. You just go directly to something that's there. And you also don't have a hierarchy. So you don't have entry nodes. You don't have exit nodes. You don't have distributions or anything. Every node is a router, and every router is its own node. So here's a nice little graphic that kind of shows Alice over there running an ITP router. So let's say she wants to send a transaction down here to the alien. With Monero being a distributed cryptocurrency, she doesn't actually have to talk to him. She just needs to talk to some node that's on the ITP network. the I2P network. So what she does is set up an inbound channel and an outbound channel to completely differentiate the traffic so that just in case the node in front of her were spying on her, that node couldn't correlate the packets back and forth and couldn't decrypt the packets because they don't have both sides of the communication. But as she wants to send data, she could send data that could go all the way actually to Rick. When Rick gets it, the way I2P works is it layers packets. So Alice would take her original message. She would put that in an encrypted packet and address it. And then she would take another peer and then cryptographically encode that and another and another and kind of like make a Russian egg doll. And then she would take that encrypted doll and give it to the next node. That node opens it up, sees that it can't read the data, its key doesn't work on whatever the data is, so it gives it, it reads who it's addressed to, but it can't see what the data is. So it simply gives it to the next node. That node, who it's addressed to, opens the DAW, can't read what the data is, but it can read the header, so it gives it to the next node. And in this way of doing four or more random bouncing around, ping-ponging around the network, it's totally obfuscated where Alice's original packets came from. And in this way, Kovri can handle Monero transactions over the network, giving you an additional layer of privacy. So this is an example of the Garlick encryption and how it would go through as it passes through each router so if the the nodes in between were a b c and d and then e f and g so alice could encrypt to a to b to c and to d and those are the russian dolls that get made one after another and then they get decoded as they go to bob by e f g and h decoded as they go to Bob by EFGNH. So another piece I wanted to touch on real quick was why it seems like malware, because we're at a hacking conference, why it seems malware and criminals are using Monero or exploiting computers and crypto mining or asking for, for a ransom in Monero. And as I've kind of gone, gone over a big reason of that is anonymity is with, with Monero transactions, when they get the money and they want to move the money somewhere else, you can't do blockchain analysis to see where they're moving their money to you can't blacklist a certain address or a certain wallet and you can't can't watch it as it moves through but the second is actually a sick resistance which is part of the the ethos of the Monero privacy community so because Monero wants to be decentralized or I should say the cares Monero wants to be decentralized, or I should say, because Monero wants to be private, centralization is a threat to privacy. Therefore, Monero wants to be decentralized. And ASICs, by their very nature, are centralization. There becomes a very few manufacturers. Of those manufacturers, one of them is likely to dominate the market. And you have very centralization on the processing and the networking hash power on the network. So back in April, the community as a whole decided to change the hashing algorithm so that commodity hardware that is within the reach of normal, ordinary users could still be done, could still be run to distribute and decentralize the actual hashing of the network. So this kind of crosses up two things, is because Monero can be run on commodity hardware and criminals exploit commodity hardware and Monero is an anonymous cryptocurrency, then Monero becomes the criminal's cryptocurrency. And for me, it's kind of an overlaying use case, but it sort of proves the point of Monero itself. Monero, which has a whole lot of other uses and doesn't isn't just that but for our our terms in network security this is one of the main reasons that you keep seeing Monero miners pop up in a lot of investigations. So if you like to get more info, here's a couple of quick links. GetMonero.org, Covry.io, and GetMonero.org library slash zero to Monero 101-PDF. That's where I got the formulas especially out of this. Thank you very much. If you have any questions, please come find me. I just want to comment, it sits on TCP and UDP. So, I2P, yes. Okay. I should say it sits on the IP. On the IP. Thank you very much. Yes? Why I2P over versus like Tor? Okay. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. I'm glad you asked me that question. Why I2P over Tor? Okay, I'm glad you asked me that question. Could you repeat the question? Sure. His question is why I2P over Tor? And I would like to direct that question to the guy who knows something about Covary more than I do. Okay, the general response is that TOR is not considered secure, is that it's a different layer, and that its hierarchy invites footholds for doing bad things. There's a lot of rumors one way or the other, speculations about who's running it or who's funding it or how anonymous it is, how not anonymous it is, how you can figure out people with even just a few exit nodes, you start to pick up random sort of traffic that you can put together. And I2P for me, other than the encryption that you put into it, sort of the idea that you don't exit out of that network is a simple security measure that makes it one less hop that you could be identified on. But I'd like to hear what he says. I can go on a tangent about that. No space time. No space time. No, but essentially it's not decentralized. The consensus model is discriminatory. If you have big wads of cash, I don't want to say that publicly, but okay. So it's not E2P. Essentially you're just leeching off what people with big wads of cash provide, these relays. So you're not actually a part of anything there's so much more there's more friction involved there's more layers if something goes down there's there's other points that don't go down with this if that makes sense you don't need to use the speeder You don't need to use the instrument to do a hunter. I don't know, I can go on. I sent a message recently going on tangent about that. Does that make sense? Yeah, we'll see. Yeah, yeah, I can go on. Thank you.